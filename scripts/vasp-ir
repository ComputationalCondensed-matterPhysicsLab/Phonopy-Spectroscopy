#!/usr/bin/env python


# -------
# Imports
# -------

from argparse import ArgumentParser

from spectroscopy.utilities import eigenvectors_to_eigendisplacements

from spectroscopy.interfaces.vasp_interface import parse_outcar

from spectroscopy.cli.parser import update_parser, post_process_args
from spectroscopy.cli.runtime import run_mode_ir


# ----
# Main
# ----

if __name__ == "__main__":
    # Parse command-line arguments.

    parser = ArgumentParser(
        description="Simulate IR spectra from VASP phonon-frequency "
        "and Born-charge calculations")

    # Add input-files argument group.

    group = parser.add_argument_group("Input files")

    group.add_argument(
        "--outcar_freq",
        metavar="<file_path>", type=str, dest="OUTCARFreqPath",
        default="OUTCAR",
        help="OUTCAR file to read frequencies and eigenvectors from "
             "(default: OUTCAR)")

    group.add_argument(
        "--outcar_born",
        metavar="<file_path>",  type=str, dest="OUTCARBornPath",
        default="OUTCAR",
        help="OUTCAR file to read Born charges from (default: OUTCAR)")

    # Add standard arguments groups.

    update_parser(parser, 'ir')

    # Parse and process arguments.

    args = parser.parse_args()

    post_process_args(args, 'ir')

    # Read input files.

    outcar_data = None

    if args.OUTCARFreqPath == args.OUTCARBornPath:
        outcarData = parse_outcar(
            args.OUTCARFreqPath, extract_list=[
                'atomic_masses', 'phonon_modes', 'born_charges'])
    else:
        outcar_data = parse_outcar(
            args.OUTCARFreqPath, extract_list=[
                'atomic_masses', 'phonon_modes'])

        outcar_data_2 = parse_outcar(
            args.OUTCARBornPath, extract_list=['born_charges'])

        outcar_data['born_charges'] = outcar_data_2['born_charges']

    # Convert eigenvectors to eigendisplacements.

    frequency_sets, eigenvectors = outcar_data['phonon_modes']

    eigendisplacements = eigenvectors_to_eigendisplacements(
        eigenvectors, outcar_data['atomic_masses'])

    # Pass the input data to run_mode_ir() for processing.

    run_mode_ir(
        frequency_sets[2], 'inv_cm', eigendisplacements,
        outcar_data['born_charges'], args)

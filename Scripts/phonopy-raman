#!/usr/bin/env python


# -------
# Imports
# -------

from argparse import ArgumentParser;

from SpectroscoPy.Utilities import EigenvectorsToEigendisplacements;

from SpectroscoPy.CLI.IOHelper import WriteStructuresRaman, ReadDielectricTensors;
from SpectroscoPy.CLI.Parser import UpdateParser, PostProcessArgs;
from SpectroscoPy.CLI.Phonopy import Phonopy_UpdateParser, Phonopy_LoadData_Core, Phonopy_LoadData_Optional;
from SpectroscoPy.CLI.Runtime import RunMode_Raman_Disp, RunMode_Raman_Read, RunMode_Raman_PostProc;


# ----
# Main
# ----

if __name__ == "__main__":
    # Parse command-line arguments.

    parser = ArgumentParser(
        description = "Simulate Raman spectra starting from a Phonopy calculation"
        );

    # Add standard Phonopy argument groups.

    Phonopy_UpdateParser(parser, 'raman');

    # Add standard arguments groups.

    UpdateParser(parser, 'raman', supportedFeatures = ['ir_reps']);

    # Parse and process arguments.

    args = parser.parse_args();

    PostProcessArgs(args, 'raman');

    # If creating displacements, read the structure, atomic masses and Gamma-point frequencies/eigenvectors.

    structure = None;
    frequencies, eigendisplacements = None, None;

    if args.RunMode == 'raman_disp':
        # Read input data.

        inputData = Phonopy_LoadData_Core(
            args, extractList = ['structure', 'atomic_masses', 'phonon_modes']
            );

        structure = inputData['structure'];

        frequencies, eigenvectors = inputData['phonon_modes'];

        # Convert eigenvectors to eigendisplacements.

        eigendisplacements = EigenvectorsToEigendisplacements(
            eigenvectors, inputData['atomic_masses']
            );

    # If post-processing, read the ir. rep. data and/or linewidths if required.

    linewidths, irRepData = None, None;

    if args.RunMode == 'raman_postproc':
        linewidths, irRepData = Phonopy_LoadData_Optional(args);

    # Hand over to one of the RunMode_Raman_*() routines.

    if args.RunMode == None:
        raise Exception("Error: Please specify a run mode with one of the -d/--create_disp, -r/--read or -p/--post_process options.");

    elif args.RunMode == 'raman_disp':
        dispSetsList = RunMode_Raman_Disp(
            structure, frequencies, 'thz', eigendisplacements, args
            );

        WriteStructuresRaman(
            dispSetsList, fileFormat = 'vasp_poscar', outputPrefix = args.OutputPrefix
            );

    elif args.RunMode == 'raman_read':
        epsTensors = ReadDielectricTensors(
            args.RamanInputFiles, fileFormat = 'vasp_outcar'
            );

        RunMode_Raman_Read(
            epsTensors, args
            );

    elif args.RunMode == 'raman_postproc':
        RunMode_Raman_PostProc(
            args, linewidths = linewidths, irRepData = irRepData
            );
